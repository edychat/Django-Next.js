# compose/deployment/Dockerfile.traefik
FROM traefik:v3.5

# Add AWS CLI for SSM access
RUN apk add --no-cache aws-cli bash jq

# Create entrypoint script using printf to avoid HEREDOC parsing issues
RUN printf '%s\n' \
    '#!/bin/sh' \
    'set -e' \
    'echo "🔑 Fetching SSM params for Traefik..."' \
    '' \
    'fetch_param() {' \
    '  VAR_NAME=$1' \
    '  PARAM_NAME=$2' \
    '  if [ -z "$(eval echo \$$VAR_NAME)" ]; then' \
    '    echo "→ fetching $PARAM_NAME into $VAR_NAME"' \
    '    export $VAR_NAME=$(aws ssm get-parameter --name "$PARAM_NAME" --with-decryption --query "Parameter.Value" --output text 2>/dev/null || echo "")' \
    '  fi' \
    '}' \
    '' \
    'fetch_param DOMAIN "/lpvs/DOMAIN"' \
    'fetch_param EMAIL "/lpvs/EMAIL"' \
    '' \
    '# Set fallback values with validation' \
    'if [ -z "$DOMAIN" ] || [ "$DOMAIN" = "null" ]; then' \
    '  export DOMAIN="localhost"' \
    '  echo "⚠️  Using fallback DOMAIN: $DOMAIN"' \
    'fi' \
    '' \
    'if [ -z "$EMAIL" ] || [ "$EMAIL" = "null" ]; then' \
    '  export EMAIL="admin@example.com"' \
    '  echo "⚠️  Using fallback EMAIL: $EMAIL"' \
    'fi' \
    '' \
    'mkdir -p /etc/traefik/acme' \
    'touch /etc/traefik/acme/acme.json' \
    'chmod 600 /etc/traefik/acme/acme.json' \
    '' \
    'echo "🌐 Generating dynamic configuration for domain: $DOMAIN"' \
    '' \
    '# Create dynamic configuration - handle localhost vs real domains differently' \
    'if [ "$DOMAIN" = "localhost" ]; then' \
    '  cat > /etc/traefik/dynamic.yaml << '\''INNER_EOF'\''' \
    'http:' \
    '  routers:' \
    '    backend-api:' \
    '      rule: "PathPrefix(\`/api\`) || PathPrefix(\`/admin\`)"' \
    '      entryPoints:' \
    '        - web-secure' \
    '      service: backend' \
    '' \
    '    backend-static:' \
    '      rule: "PathPrefix(\`/static\`)"' \
    '      entryPoints:' \
    '        - web-secure' \
    '      service: backend' \
    '' \
    '    frontend:' \
    '      rule: "PathPrefix(\`/\`)"' \
    '      entryPoints:' \
    '        - web-secure' \
    '      service: frontend' \
    '' \
    '  services:' \
    '    backend:' \
    '      loadBalancer:' \
    '        servers:' \
    '          - url: "http://backend:8000"' \
    '' \
    '    frontend:' \
    '      loadBalancer:' \
    '        servers:' \
    '          - url: "http://frontend:80"' \
    'INNER_EOF' \
    'else' \
    '  cat > /etc/traefik/dynamic.yaml << INNER_EOF' \
    'http:' \
    '  routers:' \
    '    backend-api:' \
    '      rule: "(Host(\`$DOMAIN\`) || Host(\`www.$DOMAIN\`)) && (PathPrefix(\`/api\`) || PathPrefix(\`/admin\`))"' \
    '      entryPoints:' \
    '        - web-secure' \
    '      tls:' \
    '        certResolver: letsencrypt' \
    '      service: backend' \
    '' \
    '    backend-static:' \
    '      rule: "(Host(\`$DOMAIN\`) || Host(\`www.$DOMAIN\`)) && PathPrefix(\`/static\`)"' \
    '      entryPoints:' \
    '        - web-secure' \
    '      tls:' \
    '        certResolver: letsencrypt' \
    '      service: backend' \
    '' \
    '    frontend:' \
    '      rule: "Host(\`$DOMAIN\`) || Host(\`www.$DOMAIN\`)"' \
    '      entryPoints:' \
    '        - web-secure' \
    '      tls:' \
    '        certResolver: letsencrypt' \
    '      service: frontend' \
    '' \
    '  services:' \
    '    backend:' \
    '      loadBalancer:' \
    '        servers:' \
    '          - url: "http://backend:8000"' \
    '' \
    '    frontend:' \
    '      loadBalancer:' \
    '        servers:' \
    '          - url: "http://frontend:80"' \
    'INNER_EOF' \
    'fi' \
    '' \
    'echo "✅ Dynamic config generated. Launching Traefik..."' \
    'exec traefik \' \
    '  --log.level=INFO \' \
    '  --entrypoints.web.address=:80 \' \
    '  --entrypoints.web.http.redirections.entrypoint.to=web-secure \' \
    '  --entrypoints.web.http.redirections.entrypoint.scheme=https \' \
    '  --entrypoints.web-secure.address=:443 \' \
    '  --certificatesresolvers.letsencrypt.acme.email="$EMAIL" \' \
    '  --certificatesresolvers.letsencrypt.acme.storage=/etc/traefik/acme/acme.json \' \
    '  --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web \' \
    '  --providers.docker=true \' \
    '  --providers.docker.exposedbydefault=false \' \
    '  --providers.file.filename=/etc/traefik/dynamic.yaml \' \
    '  --providers.file.watch=true' \
    > /entrypoint.sh

RUN chmod +x /entrypoint.sh

ENTRYPOINT ["/entrypoint.sh"]